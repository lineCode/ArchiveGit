/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jri.h"

/* Header for class NpCtp */

#ifndef _NpCtp_H_
#define _NpCtp_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

struct java_lang_String;
struct java_lang_Class;

/*******************************************************************************
 * Class NpCtp
 ******************************************************************************/

typedef struct NpCtp NpCtp;

#define classname_NpCtp	"NpCtp"

#define class_NpCtp(env) \
	((struct java_lang_Class*)JRI_FindClass(env, classname_NpCtp))

/*******************************************************************************
 * Public Methods
 ******************************************************************************/

#ifdef DEBUG

/*** public native GetCommand (Ljava/lang/String;)I ***/
extern JRI_PUBLIC_API(jint)
NpCtp_GetCommand(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native FileDownload (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
NpCtp_FileDownload(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native PutSrc (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
NpCtp_PutSrc(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native GetSrc ()Ljava/lang/String; ***/
extern JRI_PUBLIC_API(struct java_lang_String *)
NpCtp_GetSrc(JRIEnv* env, struct NpCtp* self);

/*** public <init> ()V ***/
extern JRI_PUBLIC_API(struct NpCtp*)
NpCtp_new(JRIEnv* env, struct java_lang_Class* clazz);

/*** public native PutContext (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
NpCtp_PutContext(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native GetContext ()Ljava/lang/String; ***/
extern JRI_PUBLIC_API(struct java_lang_String *)
NpCtp_GetContext(JRIEnv* env, struct NpCtp* self);

/*** public native DoCommand (Ljava/lang/String;)I ***/
extern JRI_PUBLIC_API(jint)
NpCtp_DoCommand(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

#else /* !DEBUG */

/*** public native GetCommand (Ljava/lang/String;)I ***/
#define NpCtp_GetCommand(env, obj, a) \
	((jint)JRI_CallMethodInt(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_GetCommand, a))

/*** public native FileDownload (Ljava/lang/String;)V ***/
#define NpCtp_FileDownload(env, obj, a) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_FileDownload, a))

/*** public native PutSrc (Ljava/lang/String;)V ***/
#define NpCtp_PutSrc(env, obj, a) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_PutSrc, a))

/*** public native GetSrc ()Ljava/lang/String; ***/
#define NpCtp_GetSrc(env, obj) \
	((struct java_lang_String *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_GetSrc))

/*** public <init> ()V ***/
#define NpCtp_new(env, clazz)	\
	((struct NpCtp*)JRI_NewObject(env)(env, JRI_NewObject_op, clazz, methodID_NpCtp_new))

/*** public native PutContext (Ljava/lang/String;)V ***/
#define NpCtp_PutContext(env, obj, a) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_PutContext, a))

/*** public native GetContext ()Ljava/lang/String; ***/
#define NpCtp_GetContext(env, obj) \
	((struct java_lang_String *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_GetContext))

/*** public native DoCommand (Ljava/lang/String;)I ***/
#define NpCtp_DoCommand(env, obj, a) \
	((jint)JRI_CallMethodInt(env)(env, JRI_CallMethod_op, obj, methodID_NpCtp_DoCommand, a))

#endif /* !DEBUG*/

/*** public native GetCommand (Ljava/lang/String;)I ***/
extern JRIMethodID FAR methodID_NpCtp_GetCommand;
#define name_NpCtp_GetCommand	"GetCommand"
#define sig_NpCtp_GetCommand 	"(Ljava/lang/String;)I"
#define use_NpCtp_GetCommand(env, clazz)	\
	(methodID_NpCtp_GetCommand =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_GetCommand,	\
			sig_NpCtp_GetCommand))
#define unuse_NpCtp_GetCommand(env, clazz)	\
	(methodID_NpCtp_GetCommand = JRIUninitialized)

/*** public native FileDownload (Ljava/lang/String;)V ***/
extern JRIMethodID FAR methodID_NpCtp_FileDownload;
#define name_NpCtp_FileDownload	"FileDownload"
#define sig_NpCtp_FileDownload 	"(Ljava/lang/String;)V"
#define use_NpCtp_FileDownload(env, clazz)	\
	(methodID_NpCtp_FileDownload =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_FileDownload,	\
			sig_NpCtp_FileDownload))
#define unuse_NpCtp_FileDownload(env, clazz)	\
	(methodID_NpCtp_FileDownload = JRIUninitialized)

/*** public native PutSrc (Ljava/lang/String;)V ***/
extern JRIMethodID FAR methodID_NpCtp_PutSrc;
#define name_NpCtp_PutSrc	"PutSrc"
#define sig_NpCtp_PutSrc 	"(Ljava/lang/String;)V"
#define use_NpCtp_PutSrc(env, clazz)	\
	(methodID_NpCtp_PutSrc =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_PutSrc,	\
			sig_NpCtp_PutSrc))
#define unuse_NpCtp_PutSrc(env, clazz)	\
	(methodID_NpCtp_PutSrc = JRIUninitialized)

/*** public native GetSrc ()Ljava/lang/String; ***/
extern JRIMethodID FAR methodID_NpCtp_GetSrc;
#define name_NpCtp_GetSrc	"GetSrc"
#define sig_NpCtp_GetSrc 	"()Ljava/lang/String;"
#define use_NpCtp_GetSrc(env, clazz)	\
	(methodID_NpCtp_GetSrc =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_GetSrc,	\
			sig_NpCtp_GetSrc))
#define unuse_NpCtp_GetSrc(env, clazz)	\
	(methodID_NpCtp_GetSrc = JRIUninitialized)

/*** public <init> ()V ***/
extern JRIMethodID FAR methodID_NpCtp_new;
#define name_NpCtp_new	"<init>"
#define sig_NpCtp_new 	"()V"
#define use_NpCtp_new(env, clazz)	\
	(methodID_NpCtp_new =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_new,	\
			sig_NpCtp_new))
#define unuse_NpCtp_new(env, clazz)	\
	(methodID_NpCtp_new = JRIUninitialized)

/*** public native PutContext (Ljava/lang/String;)V ***/
extern JRIMethodID FAR methodID_NpCtp_PutContext;
#define name_NpCtp_PutContext	"PutContext"
#define sig_NpCtp_PutContext 	"(Ljava/lang/String;)V"
#define use_NpCtp_PutContext(env, clazz)	\
	(methodID_NpCtp_PutContext =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_PutContext,	\
			sig_NpCtp_PutContext))
#define unuse_NpCtp_PutContext(env, clazz)	\
	(methodID_NpCtp_PutContext = JRIUninitialized)

/*** public native GetContext ()Ljava/lang/String; ***/
extern JRIMethodID FAR methodID_NpCtp_GetContext;
#define name_NpCtp_GetContext	"GetContext"
#define sig_NpCtp_GetContext 	"()Ljava/lang/String;"
#define use_NpCtp_GetContext(env, clazz)	\
	(methodID_NpCtp_GetContext =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_GetContext,	\
			sig_NpCtp_GetContext))
#define unuse_NpCtp_GetContext(env, clazz)	\
	(methodID_NpCtp_GetContext = JRIUninitialized)

/*** public native DoCommand (Ljava/lang/String;)I ***/
extern JRIMethodID FAR methodID_NpCtp_DoCommand;
#define name_NpCtp_DoCommand	"DoCommand"
#define sig_NpCtp_DoCommand 	"(Ljava/lang/String;)I"
#define use_NpCtp_DoCommand(env, clazz)	\
	(methodID_NpCtp_DoCommand =	\
		JRI_GetMethodID(env, clazz,	\
			name_NpCtp_DoCommand,	\
			sig_NpCtp_DoCommand))
#define unuse_NpCtp_DoCommand(env, clazz)	\
	(methodID_NpCtp_DoCommand = JRIUninitialized)

/*******************************************************************************
 * IMPLEMENTATION SECTION: 
 * Define the IMPLEMENT_NpCtp symbol 
 * if you intend to implement the native methods of this class. This 
 * symbol makes the private and protected methods available. You should 
 * also call the register_NpCtp routine 
 * to make your native methods available.
 ******************************************************************************/

extern JRI_PUBLIC_API(struct java_lang_Class*)
use_NpCtp(JRIEnv* env);

extern JRI_PUBLIC_API(void)
unuse_NpCtp(JRIEnv* env);

extern JRI_PUBLIC_API(struct java_lang_Class*)
register_NpCtp(JRIEnv* env);

extern JRI_PUBLIC_API(void)
unregister_NpCtp(JRIEnv* env);

#ifdef IMPLEMENT_NpCtp

/*******************************************************************************
 * Native Methods: 
 * These are the signatures of the native methods which you must implement.
 ******************************************************************************/

/*** public native GetCommand (Ljava/lang/String;)I ***/
extern JRI_PUBLIC_API(jint)
native_NpCtp_GetCommand(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native FileDownload (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
native_NpCtp_FileDownload(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native PutSrc (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
native_NpCtp_PutSrc(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native GetSrc ()Ljava/lang/String; ***/
extern JRI_PUBLIC_API(struct java_lang_String *)
native_NpCtp_GetSrc(JRIEnv* env, struct NpCtp* self);

/*** public native PutContext (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(void)
native_NpCtp_PutContext(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

/*** public native GetContext ()Ljava/lang/String; ***/
extern JRI_PUBLIC_API(struct java_lang_String *)
native_NpCtp_GetContext(JRIEnv* env, struct NpCtp* self);

/*** public native DoCommand (Ljava/lang/String;)I ***/
extern JRI_PUBLIC_API(jint)
native_NpCtp_DoCommand(JRIEnv* env, struct NpCtp* self, struct java_lang_String *a);

#endif /* IMPLEMENT_NpCtp */

#ifdef __cplusplus
} /* extern "C" */

/*******************************************************************************
 * C++ Definitions
 ******************************************************************************/

#include "netscape_plugin_Plugin.h"

struct NpCtp : virtual public netscape_plugin_Plugin {

	static struct java_lang_Class* _use(JRIEnv* env) {
		return use_NpCtp(env);
	}

	static void _unuse(JRIEnv* env) {
		unuse_NpCtp(env);
	}

	static struct java_lang_Class* _register(JRIEnv* env) {
		return register_NpCtp(env);
	}

	static void _unregister(JRIEnv* env) {
		unregister_NpCtp(env);
	}

	static struct java_lang_Class* _class(JRIEnv* env) {
		return class_NpCtp(env);
	}

	/* Public Methods */
	/*** public native GetCommand (Ljava/lang/String;)I ***/
	jint GetCommand(JRIEnv* env, struct java_lang_String *a) {
		return NpCtp_GetCommand(env, this, a);
	}

	/*** public native FileDownload (Ljava/lang/String;)V ***/
	void FileDownload(JRIEnv* env, struct java_lang_String *a) {
		NpCtp_FileDownload(env, this, a);
	}

	/*** public native PutSrc (Ljava/lang/String;)V ***/
	void PutSrc(JRIEnv* env, struct java_lang_String *a) {
		NpCtp_PutSrc(env, this, a);
	}

	/*** public native GetSrc ()Ljava/lang/String; ***/
	struct java_lang_String * GetSrc(JRIEnv* env) {
		return NpCtp_GetSrc(env, this);
	}

	/*** public <init> ()V ***/
	static NpCtp* _new(JRIEnv* env, struct java_lang_Class* clazz) {
		return NpCtp_new(env, clazz);
	}

	/*** public native PutContext (Ljava/lang/String;)V ***/
	void PutContext(JRIEnv* env, struct java_lang_String *a) {
		NpCtp_PutContext(env, this, a);
	}

	/*** public native GetContext ()Ljava/lang/String; ***/
	struct java_lang_String * GetContext(JRIEnv* env) {
		return NpCtp_GetContext(env, this);
	}

	/*** public native DoCommand (Ljava/lang/String;)I ***/
	jint DoCommand(JRIEnv* env, struct java_lang_String *a) {
		return NpCtp_DoCommand(env, this, a);
	}

#ifdef IMPLEMENT_NpCtp

#endif /* IMPLEMENT_NpCtp */
};

#endif /* __cplusplus */

#endif /* Class NpCtp */
