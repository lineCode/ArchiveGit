// Source file: brush.c
BOOL SetupBrushBuffers(BOOL fInit);
BOOL MgxBrushBegin(HWND hWndIn, LPPIXMAP lpPixmapIn, int xOffset, int yOffset, HMGXBRUSH hBrush);
BOOL MgxBrushBeginEx(HWND hWndIn, LPPIXMAP lpPixmapIn, int xOffset, int yOffset, HMGXBRUSH hBrush, BOOL fUsingMouseIn, BOOL fNotAnImageSetting, LPBRUSHUPDATEPROC lpUpdateProcIn, LPSRCPOSPROC lpSrcPosProcIn);
void MgxBrushStroke(int sx, int sy, int dx, int dy, int curs_x, int curs_y);
BOOL MgxBrushActive( void );
void MgxBrushEnd(BOOL fNoBrushDisplay);
LPMGXBRUSH CopyMgxBrush(HMGXBRUSH hBrush);
HMGXBRUSH CreateDefaultBrush( HMGXBRUSH hBrush );
void DestroyMgxBrush(HMGXBRUSH hBrush);
void SetMgxBrushSource(HMGXBRUSH hBrush, LPFRAME lpFrame, int xSrcOffset, int ySrcOffset);
int GetMgxBrushSource(HMGXBRUSH hBrush);
void SetMgxBrushSize(HMGXBRUSH hBrush, int BrushSize);
int SetMgxBrushStyle(HMGXBRUSH hBrush, int BrushStyle);
int SetMgxStylePressure(HMGXBRUSH hBrush, int StylePressure);
void SetMgxBrushFeather(HMGXBRUSH hBrush, int Feather);
BOOL SetMgxBrushShape(HMGXBRUSH hBrush, int BrushShape, LPSTR lpShapeName);
int SetMgxBrushOpacity(HMGXBRUSH hBrush, int Opacity);
int SetMgxBrushOpacityScale(HMGXBRUSH hBrush, int OpacityScale);
void SetMgxBrushColor(HMGXBRUSH hBrush, LPCOLORINFO lpColorStruct);
void SetMgxBrushFlipMode(HMGXBRUSH hBrush, int FlipMode, BOOL FlipHorz, BOOL FlipVert);
void SetMgxBrushPressure(HMGXBRUSH hBrush, int Pressure);
MERGE_MODE SetMgxBrushMergeMode(HMGXBRUSH hBrush, MERGE_MODE MergeMode);
int SetMgxBrushStrokeMethod(HMGXBRUSH hBrush, int idStrokeMethod);
void SetMgxBrushOverlap(HMGXBRUSH hBrush, BOOL bOverlap);
int GetMgxBrushSize(HMGXBRUSH hBrush);
int GetMgxStylePressure(HMGXBRUSH hBrush);
int GetMgxBrushStyle(HMGXBRUSH hBrush);
int GetMgxBrushFeather(HMGXBRUSH hBrush);
int GetMgxBrushShape(HMGXBRUSH hBrush);
int GetMgxBrushOpacity(HMGXBRUSH hBrush);
int GetMgxBrushOpacityScale(HMGXBRUSH hBrush);
int GetMgxBrushFlipMode(HMGXBRUSH hBrush, LPINT FlipHorz, LPINT FlipVert);
int GetMgxBrushPressure(HMGXBRUSH hBrush);
MERGE_MODE GetMgxBrushMergeMode(HMGXBRUSH hBrush, LPINT lpReadOnly);
void MgxBrushMirror(HMGXBRUSH hBrush, LPRECT lpSrcRect, LPRECT lpDstRect, int npix, int nlin);
void MgxMirrorRect(LPRECT lpSrcRect, LPRECT lpDstRect, int npix, int nlin, BOOL FlipHorz, BOOL FlipVert);
void CALLBACK BrushTimerProc( HWND hWindow, UINT message, WPARAM wParam, LPARAM lParam );
void FadeBrush(BOOL fSetupMask);
void FadeOutBrush(BOOL fSetupMask);
void FadeInBrush(BOOL fSetupMask);
void PressureInit( void );
void PressureSetup(int delta);
BOOL MgxOSBrushBegin(HMGXBRUSH hBrush, LPRECT lpStrokeRect, LPRECT lpMaxRect);
void MgxOSPickupBrush(void);
LPFRAME MgxOSBrushEnd(LPRECT lpRect);
void MgxOSBrushStroke(int dx, int dy);
LPTR SolidColorSource(int x, int y, int dx, int dy, int State);
LPTR CopyImageSource(int x, int y, int dx, int dy, int State);
LPTR SharpenImageSource(int x, int y, int dx, int dy, int State);
LPTR SmoothImageSource(int x, int y, int dx, int dy, int State);
LPTR LightenImageSource(int x, int y, int dx, int dy, int State);
LPTR DarkenImageSource(int x, int y, int dx, int dy, int State);
LPTR SmearImageSource(int x, int y, int dx, int dy, int State);
void Colorize24(LPRGB lpDst, LPRGB lpSrc, int iCount, LPRGB lpColor, WORD sb);
void Colorize32( LPCMYK lpDst, LPCMYK lpSrc, int iCount, LPCMYK lpColor, WORD sb);
void Colorize8(LPTR lpDst, LPTR lpSrc, int iCount, LPTR lpColor, WORD sb);
int SetMgxBrushSourceFunction( HMGXBRUSH hBrush, int SourceFunction );
int SetMgxBrushWeight( HMGXBRUSH hBrush, int Weight );

