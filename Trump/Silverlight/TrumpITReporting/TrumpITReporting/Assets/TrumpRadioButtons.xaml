<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:ClassLibrary;assembly=ClassLibrary"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
>
	<Style x:Key="TrumpRadioButtonMain" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontSize" Value="21" />
		<Setter Property="Background" Value="Yellow" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Height" Value="45" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="15,0,15,0" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Margin="{TemplateBinding Margin}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FFF5E3A9" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid MinWidth="170" Cursor="{TemplateBinding Cursor}" Effect="{StaticResource DropShadowEffect}">
							<Border x:Name="BackgroundUncheckedElements" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Border.Background>
									<ImageBrush ImageSource="../Images/Button.png" />
								</Border.Background>
							</Border>
							<Border x:Name="BackgroundCheckedElements" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
								<Border.Background>
									<ImageBrush ImageSource="../Images/ButtonGlow.png" />
								</Border.Background>
							</Border>
						</Grid>
						<Grid x:Name="ContentPresenterElements" Margin="{TemplateBinding Padding}">
							<ContentControl x:Name="ContentPresenter" IsTabStop="False" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Effect="{StaticResource TextDropShadowEffect}">
							</ContentControl>
							<Ellipse x:Name="FocusedElement" Width="5" Height="5" Fill="#FFF7E6AD" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="false" Opacity="0" />
						</Grid>
						<Grid x:Name="CheckedElements" Opacity="0">
							<Image Source="../Images/ArrowV.png" Stretch="None" Margin="0,0,0,-12" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Grid>
						<Grid x:Name="MouseOverElements" Opacity="0">
							<Image Source="../Images/ArrowV.png" Stretch="None" Margin="0,0,0,-12" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Grid>
						<Rectangle x:Name="DisabledElements" RadiusX="15" RadiusY="15" Fill="White" IsHitTestVisible="false" Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TrumpRadioButtonLeft" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="Background" Value="Yellow" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Height" Value="41" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="12,0,12,0" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Margin="{TemplateBinding Margin}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FFF5E3A9" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid MinWidth="145" Cursor="{TemplateBinding Cursor}" Effect="{StaticResource DropShadowEffect}">
							<Border x:Name="BackgroundUncheckedElements" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Border.Background>
									<ImageBrush ImageSource="../Images/Button.png" />
								</Border.Background>
							</Border>
							<Border x:Name="BackgroundCheckedElements" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
								<Border.Background>
									<ImageBrush ImageSource="../Images/ButtonGlow.png" />
								</Border.Background>
							</Border>
						</Grid>
						<Grid x:Name="ContentPresenterElements" Margin="{TemplateBinding Padding}">
							<ContentControl x:Name="ContentPresenter" IsTabStop="False" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Effect="{StaticResource TextDropShadowEffect}">
							</ContentControl>
							<Ellipse x:Name="FocusedElement" Width="5" Height="5" Fill="#FFF7E6AD" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="false" Opacity="0" />
						</Grid>
						<Grid x:Name="CheckedElements" Opacity="0">
							<Image Source="../Images/ArrowH.png" Stretch="None" Margin="0,0,-12,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
						</Grid>
						<Grid x:Name="MouseOverElements" Opacity="0">
							<Image Source="../Images/ArrowH.png" Stretch="None" Margin="0,0,-12,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
						</Grid>
						<Rectangle x:Name="DisabledElements" RadiusX="15" RadiusY="15" Fill="White" IsHitTestVisible="false" Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TrumpRadioButtonTop" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="Background" Value="Yellow" />
		<Setter Property="Foreground" Value="White" />
		<!--<Setter Property="Foreground" Value="#FF666666" />-->
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Height" Value="44" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="15,0,15,0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Margin="{TemplateBinding Margin}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FFF5E3A9" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Cursor="{TemplateBinding Cursor}">
							<Grid x:Name="BackgroundUncheckedElements">
								<Rectangle>
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFE3E3E3" Offset="0"/>
											<GradientStop Color="#FF9A9A9A" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Width="1" HorizontalAlignment="Left">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFEFEFEF" Offset="0"/>
											<GradientStop Color="#FF979797" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Width="1" HorizontalAlignment="Right">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFD1D1D1" Offset="0"/>
											<GradientStop Color="#FF767676" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
							</Grid>
							<Grid x:Name="BackgroundCheckedElements" Opacity="0">
								<Rectangle>
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FF626262" Offset="0"/>
											<GradientStop Color="#FF343434" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Width="1" HorizontalAlignment="Left">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FF656565" Offset="0.035"/>
											<GradientStop Color="#FF0A0A0A" Offset="0.94"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Width="1" HorizontalAlignment="Right">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFD1D1D1" Offset="0"/>
											<GradientStop Color="#FF767676" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
							</Grid>
						</Grid>
						<Grid x:Name="ContentPresenterElements" Margin="{TemplateBinding Padding}">
							<ContentControl x:Name="ContentPresenter" IsTabStop="False" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Effect="{StaticResource TextDropShadowEffect}">
							</ContentControl>
							<Ellipse x:Name="FocusedElement" Width="5" Height="5" Fill="#FFF7E6AD" HorizontalAlignment="Center" VerticalAlignment="Bottom" IsHitTestVisible="false" Opacity="0" Margin="0,0,0,5" />
						</Grid>
						<Grid x:Name="CheckedElements" Opacity="0">
						</Grid>
						<Grid x:Name="MouseOverElements" Opacity="0">
						</Grid>
						<Rectangle x:Name="DisabledElements" RadiusX="15" RadiusY="15" Fill="White" IsHitTestVisible="false" Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TrumpRadioButtonArrow" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="Background" Value="Yellow" />
		<Setter Property="Foreground" Value="White" />
		<!--<Setter Property="Foreground" Value="#FF666666" />-->
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Height" Value="36" />
		<Setter Property="Margin" Value="0,0,-9,0" /><!--Right = -height/4 -->
		<Setter Property="Padding" Value="28,0,19,0" /><!--Left = height/2, Right = height/4 then add desired left/right padding (10) -->
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Margin="{TemplateBinding Margin}" Cursor="{TemplateBinding Cursor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElements" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FFF5E3A9" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundUncheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedElements" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<c:StretchPanel x:Name="BackgroundUncheckedElements" Orientation="Horizontal">
							<c:StretchPanel.Resources>
								<LinearGradientBrush x:Key="UncheckedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFE3E3E3" Offset="0"/>
									<GradientStop Color="#FF9A9A9A" Offset="1"/>
								</LinearGradientBrush>
							</c:StretchPanel.Resources>
							<Border c:StretchPanel.Length="*" BorderBrush="#FF525252" BorderThickness="1,1,0,1" Background="{StaticResource UncheckedBackground}" />
							<Grid>
								<Path Stretch="UniformToFill" HorizontalAlignment="Left" Data="M0,0 L.25,.5 L0,1 z" Fill="{StaticResource UncheckedBackground}" />
								<Path Stretch="UniformToFill" HorizontalAlignment="Left" Data="M0,0 L.25,.5 L0,1" StrokeThickness="1" Stroke="#FF525252" />
							</Grid>
						</c:StretchPanel>
						<c:StretchPanel x:Name="BackgroundCheckedElements" Orientation="Horizontal" Opacity="0">
							<c:StretchPanel.Resources>
								<LinearGradientBrush x:Key="CheckedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF626262" Offset="0"/>
									<GradientStop Color="#FF343434" Offset="1"/>
								</LinearGradientBrush>
							</c:StretchPanel.Resources>
							<Border c:StretchPanel.Length="*" BorderBrush="#FF525252" BorderThickness="1,1,0,1" Background="{StaticResource CheckedBackground}" />
							<Grid>
								<Path Stretch="UniformToFill" HorizontalAlignment="Left" Data="M0,0 L.25,.5 L0,1 z" Fill="{StaticResource CheckedBackground}" />
								<Path Stretch="UniformToFill" HorizontalAlignment="Left" Data="M0,0 L.25,.5 L0,1" StrokeThickness="1" Stroke="#FF525252" />
							</Grid>
						</c:StretchPanel>
						<Grid x:Name="ContentPresenterElements" Margin="{TemplateBinding Padding}">
							<ContentControl x:Name="ContentPresenter" IsTabStop="False" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Effect="{StaticResource TextDropShadowEffect}">
							</ContentControl>
							<Ellipse x:Name="FocusedElement" Width="5" Height="5" Fill="#FFF7E6AD" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="false" Opacity="0" Margin="0,0,-9,0" /><!--Right = -height/4 -->
						</Grid>
						<Grid x:Name="CheckedElements" Opacity="0">
						</Grid>
						<Grid x:Name="MouseOverElements" Opacity="0">
						</Grid>
						<Rectangle x:Name="DisabledElements" RadiusX="15" RadiusY="15" Fill="White" IsHitTestVisible="false" Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>